// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NeighborFreq Neighbor Freq Configuration for eNodeb devices.
// swagger:model NeighborFreq
type NeighborFreq struct {

	// earfcn
	Earfcn uint32 `json:"earfcn,omitempty"`

	// enable
	Enable bool `json:"enable,omitempty"`

	// index
	// Maximum: 8
	// Minimum: 1
	Index uint32 `json:"index,omitempty"`

	// p max
	PMax int32 `json:"p_max,omitempty"`

	// q offset range
	// Enum: [-24 -22]
	QOffsetRange int32 `json:"q_offset_range,omitempty"`

	// q rx lev min sib5
	// Maximum: -22
	// Minimum: -70
	QRxLevMinSib5 int32 `json:"q_rx_lev_min_sib5,omitempty"`

	// resel thresh high
	ReselThreshHigh uint32 `json:"resel_thresh_high,omitempty"`

	// resel thresh low
	ReselThreshLow uint32 `json:"resel_thresh_low,omitempty"`

	// reselection priority
	ReselectionPriority uint32 `json:"reselection_priority,omitempty"`

	// t reselection eutra
	TReselectionEutra uint32 `json:"t_reselection_eutra,omitempty"`

	// t reselection eutra sf medium
	// Enum: [25 50 75 100]
	TReselectionEutraSfMedium uint32 `json:"t_reselection_eutra_sf_medium,omitempty"`
}

// Validate validates this neighbor freq
func (m *NeighborFreq) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIndex(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQOffsetRange(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQRxLevMinSib5(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTReselectionEutraSfMedium(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NeighborFreq) validateIndex(formats strfmt.Registry) error {

	if swag.IsZero(m.Index) { // not required
		return nil
	}

	if err := validate.MinimumInt("index", "body", int64(m.Index), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("index", "body", int64(m.Index), 8, false); err != nil {
		return err
	}

	return nil
}

var neighborFreqTypeQOffsetRangePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[-24,-22]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		neighborFreqTypeQOffsetRangePropEnum = append(neighborFreqTypeQOffsetRangePropEnum, v)
	}
}

// prop value enum
func (m *NeighborFreq) validateQOffsetRangeEnum(path, location string, value int32) error {
	if err := validate.Enum(path, location, value, neighborFreqTypeQOffsetRangePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NeighborFreq) validateQOffsetRange(formats strfmt.Registry) error {

	if swag.IsZero(m.QOffsetRange) { // not required
		return nil
	}

	// value enum
	if err := m.validateQOffsetRangeEnum("q_offset_range", "body", m.QOffsetRange); err != nil {
		return err
	}

	return nil
}

func (m *NeighborFreq) validateQRxLevMinSib5(formats strfmt.Registry) error {

	if swag.IsZero(m.QRxLevMinSib5) { // not required
		return nil
	}

	if err := validate.MinimumInt("q_rx_lev_min_sib5", "body", int64(m.QRxLevMinSib5), -70, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("q_rx_lev_min_sib5", "body", int64(m.QRxLevMinSib5), -22, false); err != nil {
		return err
	}

	return nil
}

var neighborFreqTypeTReselectionEutraSfMediumPropEnum []interface{}

func init() {
	var res []uint32
	if err := json.Unmarshal([]byte(`[25,50,75,100]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		neighborFreqTypeTReselectionEutraSfMediumPropEnum = append(neighborFreqTypeTReselectionEutraSfMediumPropEnum, v)
	}
}

// prop value enum
func (m *NeighborFreq) validateTReselectionEutraSfMediumEnum(path, location string, value uint32) error {
	if err := validate.Enum(path, location, value, neighborFreqTypeTReselectionEutraSfMediumPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NeighborFreq) validateTReselectionEutraSfMedium(formats strfmt.Registry) error {

	if swag.IsZero(m.TReselectionEutraSfMedium) { // not required
		return nil
	}

	// value enum
	if err := m.validateTReselectionEutraSfMediumEnum("t_reselection_eutra_sf_medium", "body", m.TReselectionEutraSfMedium); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NeighborFreq) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NeighborFreq) UnmarshalBinary(b []byte) error {
	var res NeighborFreq
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
