// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Sync1588 sync_1588 Configuration for  eNodeb devices.
// swagger:model sync_1588
type Sync1588 struct {

	// sync 1588 asymmetry
	Sync1588Asymmetry uint32 `json:"sync_1588_asymmetry,omitempty"`

	// sync 1588 delay rq msg interval
	Sync1588DelayRqMsgInterval int32 `json:"sync_1588_delay_rq_msg_interval,omitempty"`

	// sync 1588 domain
	Sync1588Domain int32 `json:"sync_1588_domain,omitempty"`

	// sync 1588 holdover
	Sync1588Holdover uint32 `json:"sync_1588_holdover,omitempty"`

	// sync 1588 msg interval
	Sync1588MsgInterval int32 `json:"sync_1588_msg_interval,omitempty"`

	// sync 1588 switch
	Sync1588Switch bool `json:"sync_1588_switch,omitempty"`

	// sync 1588 unicast enable
	Sync1588UnicastEnable bool `json:"sync_1588_unicast_enable,omitempty"`

	// sync 1588 unicast server Ip
	// Format: ipv4
	Sync1588UnicastServerIP strfmt.IPv4 `json:"sync_1588_unicast_serverIp,omitempty"`
}

// Validate validates this sync 1588
func (m *Sync1588) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSync1588UnicastServerIP(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Sync1588) validateSync1588UnicastServerIP(formats strfmt.Registry) error {

	if swag.IsZero(m.Sync1588UnicastServerIP) { // not required
		return nil
	}

	if err := validate.FormatOf("sync_1588_unicast_serverIp", "body", "ipv4", m.Sync1588UnicastServerIP.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Sync1588) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Sync1588) UnmarshalBinary(b []byte) error {
	var res Sync1588
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
